<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen.ezenmarket.product.mapper.ProductMapper">
   <select id="selectAllProducts" resultType="com.ezen.ezenmarket.product.dto.Post">
      SELECT * FROM post INNER JOIN postImage USING (post_id)
      WHERE (post_id, post_image_id) in 
      (select post_id, min(post_image_id) FROM postImage GROUP BY post_id)
      ORDER BY updated DESC
   </select>
   
   <select id="selectAllProductsOrderByView" resultType="com.ezen.ezenmarket.product.dto.Post">
      SELECT * FROM post INNER JOIN postImage USING (post_id)
      WHERE (post_id, post_image_id) in 
      (select post_id, min(post_image_id) FROM postImage GROUP BY post_id)
      ORDER BY post_view DESC
   </select>
   
   <select id="selectProduct" resultType="com.ezen.ezenmarket.product.dto.Post">
      SELECT * FROM post INNER JOIN postImage USING (post_id) WHERE post_image_id = (SELECT min(post_image_id) FROM postimage WHERE post_id = #{id})
   </select>
   
   <select id="insertProduct" parameterType="com.ezen.ezenmarket.product.dto.Post">
      INSERT INTO post VALUES (post_id_seq.NEXTVAL, #{user_number}, #{post_address}, #{title}, #{post_content}, #{category_id}, #{price}, 
         sysdate, sysdate, 0)
   </select>
   
   
   
   
   <select id="deduplicatedProd" resultType="com.ezen.ezenmarket.product.dto.Post">
      SELECT * FROM post INNER JOIN postImage USING (post_id)
      WHERE (post_id, post_image_id) in 
      ( select post_id, min(post_image_id) FROM postImage GROUP BY post_id)
      ORDER BY updated DESC   
   </select>
   
   
   
   <!-- ※※※※※ 여기부터 내가 한 것 (위에 것 건들지 말기!!) ※※※※※ -->   
   
   
   <!-- 카테고리별로 출력하기 -->
   <select id="getCateList" resultType="com.ezen.ezenmarket.product.dto.Post">
        SELECT * FROM post 
      INNER JOIN postimage
      USING (post_id)   
        INNER JOIN category
        USING (category_id)
        WHERE (post_id, post_image_id) in (select post_id, min(post_image_id) FROM postImage GROUP BY post_id) AND category_id=#{category_id}
        ORDER BY updated DESC
   </select>
   
   <!-- 상품 상세페이지(상품정보 + 상품이미지정보 + 판매자정보) -->
   <select id="getDetails" resultType="com.ezen.ezenmarket.product.dto.Post">
      SELECT * FROM post INNER JOIN postImage USING (post_id) INNER JOIN userList USING (user_number) WHERE post_image_id = (SELECT min(post_image_id) FROM postimage WHERE post_id = #{post_id})
   </select>   
   
   <!-- 판매자가 등록한 상품 개수 가져오기 -->
   <select id="cntProdBySeller" resultType="int">
      SELECT count(post_id) FROM post WHERE user_number=#{user_number}   
   </select>
   
   
   <!-- 판매자가 등록한 연관상품 가져오기 -->
   <select id="getRelatedProd" resultType="com.ezen.ezenmarket.product.dto.Post">   
      SELECT * FROM post INNER JOIN postImage USING (post_id)
      WHERE (post_id, post_image_id) in 
      (select post_id, min(post_image_id) FROM postImage GROUP BY post_id) AND post_id NOT IN (#{post_id}) AND user_number=#{user_number}
      ORDER BY updated DESC
   </select>
   
   <!-- 찜 개수 가져오기 -->
   <select id="cntWishlist" resultType="int">
      SELECT 
          count(*) 
      FROM wishlist 
      INNER JOIN post 
      USING (post_id)
      WHERE post_id=#{post_id}
   </select>
   
   <!-- 조회수 가져오기 -->
   <update id="plusView">
      UPDATE post SET post_view=post_view+1 WHERE post_id=#{post_id}   
   </update>
   
   <!-- 특정 포스트에 포함된 이미지 목록 가져오기 -->
   <select id="getPostImages" resultType="com.ezen.ezenmarket.product.dto.PostImage">
      SELECT * FROM postImage WHERE post_id = #{post_id} 
   </select>

    <!-- 찜 여부 확인하기 -->
    <select id="countNumOfZzim" resultType="Integer">
       SELECT count(*) FROM wishlist WHERE user_number = #{user_number} AND post_id = #{post_id}
    </select>
    
    <insert id="insertZzim" parameterType="Integer">
       INSERT INTO wishlist VALUES (wishlist_id_seq.nextval, #{user_number}, #{post_id})
    
    </insert>
    
    <delete id="deleteZzim" parameterType="Integer">
       DELETE FROM wishlist WHERE user_number = #{user_number} AND post_id = #{post_id}
    </delete>
    
    
    <!-- 상세페이지 프로필 사진 가져오기 -->
    <select id="getProfileImg" resultType="com.ezen.ezenmarket.product.dto.Post">
       SELECT *
        FROM userlist 
        INNER JOIN post
        USING (user_number)
        WHERE user_number = #{user_number} AND post_id = #{post_id} 
    </select>
    
    <!-- 검색 기능 -->
	<select id="searchProduct" resultType="com.ezen.ezenmarket.product.dto.Post">
	 	SELECT * FROM post INNER JOIN postImage USING (post_id)
      WHERE (post_id, post_image_id) in 
      (select post_id, min(post_image_id) FROM postImage GROUP BY post_id) 
        AND
        (title LIKE '%'||#{search}||'%'
        OR
        post_content LIKE '%'||#{search}||'%')
      ORDER BY post_id DESC -
      SELECT title, post_content FROM post WHERE 
	</select>

	<!-- 검색 + 페이징 처리 -->
	<select id="getProductWithPaging" resultType="com.ezen.ezenmarket.product.dto.Post">  
       SELECT * FROM (SELECT A.*, ROWNUM AS RN FROM (SELECT * FROM post INNER JOIN postimage USING (post_id)
      WHERE (post_id, post_image_id) IN 
      (SELECT post_id, min(post_image_id) FROM postImage GROUP BY post_id) AND (title LIKE '%'||#{title}||'%' OR post_content LIKE '%'||#{title}||'%') ORDER BY updated DESC) A
      WHERE rownum <![CDATA[<=]]> #{vo.end})WHERE RN <![CDATA[>=]]> #{vo.start}     
	</select>
	
	<!-- 검색한 상품 총 개수 출력 -->
	<select id="countProduct" resultType="int">
		 SELECT COUNT(*) FROM post INNER JOIN postImage USING (post_id) WHERE (title LIKE '%'||#{title}||'%' OR post_content LIKE '%'||#{title}||'%')
	</select>
	
	<!-- 검색된 결과의 개수 --> 
	<select id="getSearchCnt" resultType="Integer">
      SELECT COUNT(*) FROM post 
      INNER JOIN postImage USING (post_id) 
      WHERE (post_id, post_image_id) in (select post_id, min(post_image_id) FROM postImage GROUP BY post_id) 
      AND (title LIKE '%'||#{title}||'%' OR post_content LIKE '%'||#{title}||'%')   
   </select>
	
		<!-- 가격 높은순 -->
	<select id="getProductHighPrice" resultType="com.ezen.ezenmarket.product.dto.Post">  
       SELECT * FROM (SELECT A.*, ROWNUM AS RN FROM (SELECT * FROM post INNER JOIN postimage USING (post_id)
      WHERE (post_id, post_image_id) IN 
      (SELECT post_id, min(post_image_id) FROM postImage GROUP BY post_id) AND (title LIKE '%'||#{title}||'%' OR post_content LIKE '%'||#{title}||'%') ORDER BY price DESC) A
      WHERE rownum <![CDATA[<=]]> #{vo.end})WHERE RN <![CDATA[>=]]> #{vo.start}     
	</select>
	
		<!-- 가격 낮은순 -->
	<select id="getProductLowPrice" resultType="com.ezen.ezenmarket.product.dto.Post">  
       SELECT * FROM (SELECT A.*, ROWNUM AS RN FROM (SELECT * FROM post INNER JOIN postimage USING (post_id)
      WHERE (post_id, post_image_id) IN 
      (SELECT post_id, min(post_image_id) FROM postImage GROUP BY post_id) AND (title LIKE '%'||#{title}||'%' OR post_content LIKE '%'||#{title}||'%') ORDER BY price ASC) A
      WHERE rownum <![CDATA[<=]]> #{vo.end})WHERE RN <![CDATA[>=]]> #{vo.start}     
	</select>
	
	
	<!-- 전체 상품 총 개수 출력 -->
   <select id="countAllProduct" resultType="int">
      SELECT count(*) FROM post
        INNER JOIN postimage
        USING (post_id)
        WHERE (post_id, post_image_id) IN (select post_id, MIN(post_image_id) FROM postImage GROUP BY post_id)
   </select>
   
   <select id="isEndDeal" resultType="Integer">
   		SELECT enddeal_id FROM enddeal WHERE post_id = #{post_id}
   </select>
   
   <select id="getPost_Id" resultType="int">
      SELECT max(post_id) FROM post  WHERE user_number = #{user_number}
   </select>
   
   <insert id="insertNewPost">
   	  INSERT INTO post VALUES (post_id_seq.nextval, #{user_number}, #{post_address}, #{title}, #{post_content}, #{category_id}, #{price}, sysdate, sysdate, 0)
   </insert>
   
   
   <insert id="insertPostImage" parameterType="com.ezen.ezenmarket.product.dto.Post">
   	  Insert into postImage values(post_image_id_seq.nextval, #{post_id}, #{image_url})
   </insert>
   
   <update id="updateProduct" parameterType="com.ezen.ezenmarket.product.dto.Post2">
    UPDATE 
    	post
    SET 
    	post_address = #{post_address}, title = #{title}, post_content = #{post_content}, category_id = #{category_id}, price = #{price}
    WHERE 
    	post_Id = #{post_Id}
	</update>
	
	<insert id="insertPostImage2" parameterType="com.ezen.ezenmarket.product.dto.Post2">
   	  Insert into postImage values(post_image_id_seq.nextval, #{post_id}, #{image_url})
   </insert>
   
    <select id="getProductInfo" parameterType="Integer" resultType="com.ezen.ezenmarket.product.dto.Post2">
   	  SELECT * FROM post WHERE post_Id = #{post_Id}
   </select>
      
	
   
</mapper>